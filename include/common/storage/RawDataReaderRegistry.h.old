#ifndef __EA4_STORAGE_RAW_DATA_READER_REGISTRY_H
#define __EA4_STORAGE_RAW_DATA_READER_REGISTRY_H

#include "storage/RawDataReader.h"

namespace ea4 { namespace storage {

/** 
    Basic class of the format-specific factories of RawDataReaders 
*/
class RawDataReaderFactory {

 public:

  /** factory method */
  virtual DataReader* 
    createReader(Index &index, RawDataReader::PrvData* prvData) = 0;

};

/** Registry the format-specific factories */
class RawDataReaderRegistry {

 public:

  /** Returns singleteton */
  static RawDataReaderRegistry* getInstance();

  /** Registers a factory with the specified file extension */
  void setFactory(const std::string& ext, RawDataReaderFactory* factory);

  /** Returns a factory for the specified file */
  RawDataReaderFactory* getFactory(const std::string& filename);

 private:

  RawDataReaderRegistry();
 ~RawDataReaderRegistry();

 private:

  static RawDataReaderRegistry* theInstance;

  std::map<std::string, RawDataReaderFactory*> factories;

};

}}

#endif
